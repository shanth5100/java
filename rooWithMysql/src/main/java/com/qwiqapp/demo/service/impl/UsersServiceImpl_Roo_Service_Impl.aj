// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.qwiqapp.demo.service.impl;

import com.qwiqapp.demo.model.Users;
import com.qwiqapp.demo.repository.UsersRepository;
import com.qwiqapp.demo.service.impl.UsersServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect UsersServiceImpl_Roo_Service_Impl {
    
    declare @type: UsersServiceImpl: @Service;
    
    declare @type: UsersServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private UsersRepository UsersServiceImpl.usersRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param usersRepository
     */
    @Autowired
    public UsersServiceImpl.new(UsersRepository usersRepository) {
        setUsersRepository(usersRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return UsersRepository
     */
    public UsersRepository UsersServiceImpl.getUsersRepository() {
        return usersRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param usersRepository
     */
    public void UsersServiceImpl.setUsersRepository(UsersRepository usersRepository) {
        this.usersRepository = usersRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param users
     * @return Map
     */
    public Map<String, List<MessageI18n>> UsersServiceImpl.validate(Users users) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param users
     */
    @Transactional
    public void UsersServiceImpl.delete(Users users) {
        getUsersRepository().delete(users);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Users> UsersServiceImpl.save(Iterable<Users> entities) {
        return getUsersRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void UsersServiceImpl.delete(Iterable<Long> ids) {
        List<Users> toDelete = getUsersRepository().findAll(ids);
        getUsersRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Users
     */
    @Transactional
    public Users UsersServiceImpl.save(Users entity) {
        return getUsersRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Users
     */
    public Users UsersServiceImpl.findOne(Long id) {
        return getUsersRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Users
     */
    public Users UsersServiceImpl.findOneForUpdate(Long id) {
        return getUsersRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Users> UsersServiceImpl.findAll(Iterable<Long> ids) {
        return getUsersRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Users> UsersServiceImpl.findAll() {
        return getUsersRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long UsersServiceImpl.count() {
        return getUsersRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Users> UsersServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getUsersRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Users> UsersServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getUsersRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Users> UsersServiceImpl.getEntityType() {
        return Users.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> UsersServiceImpl.getIdType() {
        return Long.class;
    }
    
}
