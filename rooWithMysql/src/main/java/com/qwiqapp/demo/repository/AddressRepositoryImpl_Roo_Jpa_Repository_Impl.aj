// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.qwiqapp.demo.repository;

import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import com.qwiqapp.demo.model.Address;
import com.qwiqapp.demo.model.QAddress;
import com.qwiqapp.demo.repository.AddressRepositoryImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AddressRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare @type: AddressRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String AddressRepositoryImpl.ADDRESS_1 = "address1";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String AddressRepositoryImpl.ADDRESS_2 = "address2";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String AddressRepositoryImpl.CITY = "city";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String AddressRepositoryImpl.__STATE = "_state";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String AddressRepositoryImpl.COUNTRY = "country";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String AddressRepositoryImpl.POST_CODE = "postCode";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Address> AddressRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QAddress address = QAddress.address;
        
        JPQLQuery<Address> query = from(address);
        
        Path<?>[] paths = new Path<?>[] {address.address1,address.address2,address.city,address._state,address.country,address.postCode};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(ADDRESS_1, address.address1)
			.map(ADDRESS_2, address.address2)
			.map(CITY, address.city)
			.map(__STATE, address._state)
			.map(COUNTRY, address.country)
			.map(POST_CODE, address.postCode);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, address);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Address> AddressRepositoryImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        
        QAddress address = QAddress.address;
        
        JPQLQuery<Address> query = from(address);
        
        Path<?>[] paths = new Path<?>[] {address.address1,address.address2,address.city,address._state,address.country,address.postCode};        
        applyGlobalSearch(globalSearch, query, paths);
        
        // Also, filter by the provided ids
        query.where(address.id.in(ids));
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(ADDRESS_1, address.address1)
			.map(ADDRESS_2, address.address2)
			.map(CITY, address.city)
			.map(__STATE, address._state)
			.map(COUNTRY, address.country)
			.map(POST_CODE, address.postCode);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, address);
    }
    
}
