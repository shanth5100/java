// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.roo.mulmod.model;

import com.roo.mulmod.model.Attachment;
import com.roo.mulmod.model.User;
import java.util.List;
import java.util.Objects;

privileged aspect User_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long User.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return User
     */
    public User User.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer User.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return User
     */
    public User User.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets name value
     * 
     * @return String
     */
    public String User.getName() {
        return this.name;
    }
    
    /**
     * Sets name value
     * 
     * @param name
     * @return User
     */
    public User User.setName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Gets email value
     * 
     * @return String
     */
    public String User.getEmail() {
        return this.email;
    }
    
    /**
     * Sets email value
     * 
     * @param email
     * @return User
     */
    public User User.setEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Gets password value
     * 
     * @return String
     */
    public String User.getPassword() {
        return this.password;
    }
    
    /**
     * Sets password value
     * 
     * @param password
     * @return User
     */
    public User User.setPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Gets attachments value
     * 
     * @return List
     */
    public List<Attachment> User.getAttachments() {
        return this.attachments;
    }
    
    /**
     * Sets attachments value
     * 
     * @param attachments
     * @return User
     */
    public User User.setAttachments(List<Attachment> attachments) {
        this.attachments = attachments;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean User.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof User)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((User) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int User.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String User.toString() {
        return "User {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", name='" + name + '\'' + 
                ", email='" + email + '\'' + 
                ", password='" + password + '\'' + "}" + super.toString();
    }
    
}
