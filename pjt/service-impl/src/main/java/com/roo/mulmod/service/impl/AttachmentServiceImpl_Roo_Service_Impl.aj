// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.roo.mulmod.service.impl;

import com.roo.mulmod.model.Attachment;
import com.roo.mulmod.model.User;
import com.roo.mulmod.repository.AttachmentRepository;
import com.roo.mulmod.service.impl.AttachmentServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AttachmentServiceImpl_Roo_Service_Impl {
    
    declare @type: AttachmentServiceImpl: @Service;
    
    declare @type: AttachmentServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private AttachmentRepository AttachmentServiceImpl.attachmentRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param attachmentRepository
     */
    @Autowired
    public AttachmentServiceImpl.new(AttachmentRepository attachmentRepository) {
        setAttachmentRepository(attachmentRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return AttachmentRepository
     */
    public AttachmentRepository AttachmentServiceImpl.getAttachmentRepository() {
        return attachmentRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param attachmentRepository
     */
    public void AttachmentServiceImpl.setAttachmentRepository(AttachmentRepository attachmentRepository) {
        this.attachmentRepository = attachmentRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param attachment
     * @return Map
     */
    public Map<String, List<MessageI18n>> AttachmentServiceImpl.validate(Attachment attachment) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param attachment
     */
    @Transactional
    public void AttachmentServiceImpl.delete(Attachment attachment) {
        // Clear bidirectional many-to-one child relationship with User
        if (attachment.getUzer() != null) {
            attachment.getUzer().getAttachments().remove(attachment);
        }
        
        getAttachmentRepository().delete(attachment);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Attachment> AttachmentServiceImpl.save(Iterable<Attachment> entities) {
        return getAttachmentRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void AttachmentServiceImpl.delete(Iterable<Long> ids) {
        List<Attachment> toDelete = getAttachmentRepository().findAll(ids);
        getAttachmentRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Attachment
     */
    @Transactional
    public Attachment AttachmentServiceImpl.save(Attachment entity) {
        return getAttachmentRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Attachment
     */
    public Attachment AttachmentServiceImpl.findOne(Long id) {
        return getAttachmentRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Attachment
     */
    public Attachment AttachmentServiceImpl.findOneForUpdate(Long id) {
        return getAttachmentRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Attachment> AttachmentServiceImpl.findAll(Iterable<Long> ids) {
        return getAttachmentRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Attachment> AttachmentServiceImpl.findAll() {
        return getAttachmentRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long AttachmentServiceImpl.count() {
        return getAttachmentRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Attachment> AttachmentServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getAttachmentRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Attachment> AttachmentServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getAttachmentRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uzer
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Attachment> AttachmentServiceImpl.findByUzer(User uzer, GlobalSearch globalSearch, Pageable pageable) {
        return getAttachmentRepository().findByUzer(uzer, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param uzer
     * @return Long
     */
    public long AttachmentServiceImpl.countByUzer(User uzer) {
        return getAttachmentRepository().countByUzer(uzer);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Attachment> AttachmentServiceImpl.getEntityType() {
        return Attachment.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> AttachmentServiceImpl.getIdType() {
        return Long.class;
    }
    
}
